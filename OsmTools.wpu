#!wing
#!version=4.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'sTx7VWoMGTqErt40CdpMSPl6Q4'\
        '7JC9dQ',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.30974729241877252,
                 'override_title': None,
                 'pagelist': [('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by mime '\
        'type',
        'list-files-first': False,
        'tree-states': {'deep': {'column-widths': [1.0],
                                 'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('pylintpanel#02EFWRQK9X24',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': [['class',
                 'all',
                 '']]}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': False,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {u'By Module': {'column-w'\
        'idths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None}},
                                'browse_mode': u'By Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          6],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('debug-io',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 1410,
                       'folded-linenos': [],
                       'sel-line': 1419,
                       'sel-line-start': 24419,
                       'selection_end': 24419,
                       'selection_start': 24419}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['field\n',
        'dups\n',
        'obj1\n',
        'soup\n',
        's\n',
        'li\n',
        'years\n',
        'ref\n'],
                                   u'file:E:/OSM-Tools/osm_fpextract.py': [''\
        'line[s:e]\n',
        'line\n',
        'self.buffer[-20:]\n',
        'self.buffer[-40:]\n',
        'self.buffer[-60:]\n',
        'self.buffer[self.buffer_pos:20]\n',
        'len(self.buffer)\n',
        'self.buffer_pos\n',
        'self.buffer[self.buffer_pos:self.buffer_pos+30]\n',
        'self.buffer[self.buffer_pos:self.buffer_pos+50]\n',
        'self.buffer[self.buffer_pos:self.buffer_pos+150]\n',
        'self.buffer[self.buffer_pos:self.buffer_pos+250]\n',
        'self.buffer[self.buffer_pos + pos]\n',
        'self.buffer[self.buffer_pos]\n',
        'self.buffer[self.buffer_pos:self.buffer_pos+20]\n',
        'self.buffer[self.buffer_pos:self.buffer_pos+37]\n',
        'self.buffer[self.buffer_pos:self.buffer_pos+74]\n',
        'self.buffer[self.buffer_pos:self.buffer_pos+cb+1]\n',
        'self.buffer[self.buffer_pos:cb+1]\n',
        'element\n',
        'element[1]\n',
        'element[0]\n'],
                                   u'file:E:/dev/OSM-Tools/dup_deleter.py': [''\
        'orig.intersection(cops)\n',
        'cops - orig\n',
        'checked\n',
        'cops.intersection(orig)\n',
        'cops\n',
        'orig\n',
        'len(orig)\n',
        'len(cops)\n',
        'len(keep)\n',
        'drop.intersection(keep)\n',
        'dups\n',
        'drop\n',
        'len(drop)\n',
        'len(dups)\n'],
                                   u'file:E:/dev/OSM-Tools/nodes2sqlite.py': [''\
        'line\n',
        's\\\n',
        's\n',
        'e\n'],
                                   u'file:E:/dev/OSM-Tools/osm_chunker.py': [''\
        'line[-3]\n',
        'line[-1]\n',
        'line[-2]\n',
        'line[1]\n'],
                                   u'file:E:/dev/OSM-Tools/osm_cs_grabber.py': [''\
        'change\n',
        "change['data']['id']\n"],
                                   u'file:E:/dev/OSM-Tools/osm_deleter.py': [''\
        'link\n',
        'OsmData\n',
        'node\n',
        'ways\n'],
                                   u'file:E:/dev/OSM-Tools/osm_grabber.py': [''\
        'row\n',
        "print row.getvalue('GAZ_ID')\n",
        "row.getvalue('GAZ_ID')\n",
        "row.getvalue('FCode')\n",
        'row.getvalue(1)\n',
        'row.getvalue(1)print\n',
        'print row.GetValue(1)\n',
        'field.Type\n',
        'link\n',
        "obj['data']['id']\n",
        "obj['data']['tag']\n"],
                                   u'file:E:/dev/OSM-Tools/osmcp_grabber.py': [""\
        "row.GetValue('GAZ_ID')\n",
        "print row.GetValue('Name')\n",
        'row.GetValue(1)print \n',
        'row.GetValue(1)\n',
        'print row.GetValue(1)\n',
        "row.GetValue('Name')\n"],
                                   u'file:E:/dev/OSM-Tools/osmcp_upload.py': [""\
        "obj['tag'][fname]\n",
        'fname\n',
        "obj['tag']\n",
        'fields\n',
        'field.Name\n'],
                                   u'file:E:/dev/OSM-Tools/osmcp_upload_oneshot.py': [''\
        'line\n',
        "s = line.find('timestamp=')\n",
        "s = line.find('timestamp=',4)\n",
        's\n'],
                                   u'file:E:/dev/OSM-Tools/splitter.py': ['l'\
        'ine\n',
        'line[1]\n',
        'line[-1]\n',
        'line[-2]\n',
        'line[-3]\n'],
                                   u'file:d:/dev/OSM-Tools/osmcp_analyzer.py': [''\
        'fcStruct\n',
        'gp.workspace\n',
        'gaz\n'],
                                   u'file:d:/dev/OSM-Tools/osmcp_planet_fgdb.py': [''\
        'p\n',
        'f\n',
        'outGDB\n',
        'os.path.split(outGDB)\n',
        'destFC\n',
        'obj\n',
        "obj['lon']\n",
        "float(obj['lon'])\n"],
                                   u'file:d:/dev/OSM-Tools/osmcp_upload_oneshot.py': [''\
        'data\n',
        'nd\n',
        "nd['id']\n",
        'self.buffer_pos\n',
        'len(self.buffer)\n',
        'f\n',
        'in_quote\n',
        'if in_quote\n',
        'if not in_quote:\n  print "yes"\n\n',
        'if in_quote:\n  print "yes"\n\n',
        'if not inquote and 5 + 2 > 6:\n  print "yes"\n\n',
        'if not in_quote and 5 + 2 > 6:\n  print "yes"\n\n',
        'self.buffer\n',
        'self.buffer.find(")\n',
        "self.buffer.find('\"')\n",
        "self.buffer.find('>')\n",
        'print 0 % 2\n',
        'print 1 % 2\n',
        'print 2 % 2\n',
        'test = "abcde"\n',
        'test[1:]\n',
        'test.find(d)\n',
        "test.find('d')\n",
        "test[1].find('d')\n",
        "test[1:].find('d')\n",
        'test[1:+2]\n',
        'test[1:+3]\n',
        'test[1:3]\n',
        'test[1:4]\n'],
                                   u'file:d:/dev/Planets/osmcp_planet_fgdb.py': [''\
        'sys.argv\n',
        'len(sys.argv)\n',
        'os.curdir()\n',
        'os.curdi\n',
        'os.curdir\n',
        'os.getcwd\n',
        'os.getcwd()\n',
        'userFile\n',
        'changeFile\n'],
                                   u'file:d:/dev/Stuff/GoogleResearchPubs.py': [''\
        'i.string\n',
        'li.i.string\n',
        'import re\n',
        "re.findall('\\d+', li.i.next.next)\n",
        "re.find('\\d+', li.i.next.next)\n",
        "re.findall('\\d+', li.i.next.next)[0]\n",
        "stuff = li.string.split('\"')\n",
        "stuff = split(li.string, '\"')\n",
        's = li.string\n',
        "s.split('\"')\n",
        'p = li.p\n',
        's = p.string\n',
        "p.findAll('i')\n",
        "p.split(',')\n",
        'c = p.contents\n',
        'c\n',
        "ta = c[0].split('\"')\n",
        'ta\n',
        "c[0].split('\"')\n",
        "c[0].split('&')\n",
        "c[0].split('&;')\n",
        "c[0].split(';')\n",
        "re.findall('\\a+', c[0])\n",
        "re.findall('\\w+', c[0])\n",
        "re.findall('[a-zA-Z0-9_]+', c[0])\n",
        "re.findall('[a-zA-Z0-9_ :]+', c[0])\n",
        "years = re.findall('\\d+', li.i.next.next)\n",
        'li.i.next.next\n',
        'years\n',
        'years.len\n',
        'len(years)\n',
        'li\n',
        'li.i\n',
        'li.i.next\n',
        'p.string\n',
        'p.next\n',
        's = p\n',
        's = str(p)\n',
        "s.split(',')\n",
        "bits = s.split(',')\n",
        'bits[0]\n',
        "pnds = s.split('#')\n",
        'pnds\n',
        'pnds[2]\n',
        "pds = pnds[2].split('.')\n",
        'pds\n',
        "cm = pnds[2].split(',')\n",
        'p\n',
        'p.br\n',
        'p.br.next\n',
        'p.br.prev\n',
        'p.br.prev.prev\n',
        'p.br.previous\n',
        'cms\n',
        "h = str(p).split('#')\n",
        'h\n',
        'h[2]\n',
        'len(h)\n',
        "cm = h[2].split(',')\n",
        'len(cm)\n',
        'cm[7]\n',
        'cm[6]\n',
        'int(cm[6])\n',
        'int(cm[7])\n',
        'cm[7].isdigit()\n',
        'cm[6].isdigit()\n',
        'cm[6].strip().isdigit()\n',
        'cm[7].strip().isdigit()\n',
        'pc[0:2]\n',
        'year\n',
        'pc\n',
        'c,\n',
        'cm\n',
        'links\n',
        'links[0]\n',
        "re.findall('\\d+', links[0])\n",
        "re.findall('pub\\d+', links[0])\n",
        'authors\n',
        'blist\n',
        'authlist\n',
        'author\n',
        'soup\n',
        'soup.h2.next\n',
        'soup.h2.next.next\n',
        'soup.h2.next.next.next\n',
        'soup.h2.next.next.next.next\n',
        'soup.h2.next.next.next.next.next\n',
        'soup.h2.next.next.next.next.next.next\n',
        'soup.h2.next.next.next.next.next.next.next\n',
        "soup.h2.next.next.next.next.next.next.findNextSibling('ul')\n",
        "soup.h2.next.next.next.next.next.next.find('ul')\n",
        "soup.find('ul')\n",
        "soup.find('ul').next\n",
        "soup.find('ul').find('ul')\n",
        "s = soup.find('ul')\n",
        's\n',
        'soup.h2.ul\n',
        'soup.h2\n',
        'soup.ul\n',
        'soup.div.ul\n'],
                                   u'file:e:/OSM-Tools/osm_fpextract.py': [''\
        'newb\n',
        'self.buffer\n',
        'self.buffer[:80]\n',
        '1\n',
        'newb[:40]\n',
        'self.buffer[:180]\n',
        'self.buffer[:145]\n',
        'self.buffer[-5:]\n',
        'self.buffpos\n',
        'self.buffsize\n',
        'cb\n',
        'self.buffer[-50:]\n',
        'self.buffer[self.bufpos:]\n',
        'self.buffer[-10:]\n',
        'self.buffer[:50]\n',
        'self.bufpos\n',
        'memtype\n',
        'self.objRel\n',
        'self.objRel_members\n',
        'self.objRel_memtypes\n']},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 0,
                       'selection_start': 0}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.80000000000000004,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''}),
                     ('python-shell',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['line\n',
        'element\n',
        'newb\n',
        'from sqlite3 import *\n',
        "test{'eric') = \"Fuckable slut\"\n",
        "test('eric')\n",
        "test ['eric'] = \"Fuckable slut\"\n",
        "test['Eric'] = \"horny girl\"\n",
        "test['Hard Cock'] = \"suck it\"\n",
        "test['cum'] = 'swallow'\n",
        'est\n',
        'test = ()\n',
        "test['Eric'] = \"horny slut\"\n",
        'test = dict()\n',
        'test\n',
        'import OsmApi\n',
        'api = OsmApi.OsmApi()\n',
        "api = OsmApi.OsmApi('navigator.er.usgs.gov')\n",
        'del api\n',
        "api = OsmApi.OsmApi(api = 'navigator.er.usgs.gov')\n",
        'print api.NodeGet(1598594)\n',
        'print api.NodeGet(1602535)\n',
        'print api.NodeGet(1602618)\n',
        'print api.NodesGet(1602618,1602535)\n',
        'print api.NodesGet([1602618,1602535])\n',
        'print api.NodesGet([1602618,1602535,1602618])\n',
        'print api.NodesGet([1602535,1602618])\n',
        'test = "one two three"\n',
        "test.split(' ')\n",
        "(one, two, three) = test.split(' ')\n",
        'one\n',
        'two\n',
        '__DATE__\n',
        "fcode = '730123'\n",
        'fcode[:3]\n',
        'tags = dict()\n',
        "tags['Status'] = 'QC2'\n",
        "tags['FCode'] = '73001'\n",
        'tags\n',
        "if 'FCode' in tags:\n",
        "if 'FCod' in tags:\n",
        '\tprint "Yep"\n',
        'range(1:2)\n',
        'range(1,2)\n',
        'line = "</osm>"\n',
        'line[1:4]\n',
        'line[1:5]\n',
        'import time\n',
        't = time.time()\n',
        'l = time.localtime(t)\n',
        'l\n',
        'time.strftime("%Y%m%d", l)\n',
        'import csv\n',
        'uf = csv.reader("users.csv")\n',
        'for row in uf:\n\tprint row\n\n',
        'for row in uf:\n\t\n\n\tprint row\n\n',
        'users = dict()\n',
        'del uf\n',
        'for row in uf:\n\tusers[row[0]] = row[1]\n\n',
        'users\n',
        "a = '5'\n",
        'b\n',
        "a = 'fred'\n",
        'b = int(a)\n',
        "float(t['version'])\n",
        'uf = csv.reader(open("users.csv", "rb"))\n',
        'import arcgisscripting\n',
        'gp = arcgisscripting.create(9.3)\n',
        "t = gp.getinstallinfo('Desktop')\n",
        "t['version']\n",
        "t['Version']\n",
        "float(t['Version'])\n",
        "round(float(t['Version']), 1)\n",
        "round(float(t['Version']), 2)\n",
        "test = '\n",
        "test = '9.3.1'\n",
        'float(test)\n',
        'int(tet)\n',
        'int(test)\n',
        't\n',
        "split(t['Version'], '.')\n",
        "t['Version'].split('.')\n",
        "a = t['Version'].split('.')\n",
        'a\n',
        'a[0]\n',
        'import OsmPlanet\n',
        'from OSMTools import OsmPlanet\n',
        'import OSMTools/OsmPlanet\n',
        'import OSMTools\\OsmPlanet\n',
        'from OsmTools import OsmPlanet\n']},
                       'sel-line': 2,
                       'sel-line-start': 148,
                       'selection_end': 148,
                       'selection_start': 148}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'obj',
                                       'fReverse': False,
                                       'fSearchText': u'xapi',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'except:',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': '',
                       'recent-filters': None}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        'field.Name')],
                       'tree-state': {'column-widths': [0.47695390781563124,
        0.5230460921843687],
                                      'expanded-nodes': [],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('osmplanet.py'),
        {'attrib-starts': [],
         'first-line': 0,
         'folded-linenos': [],
         'sel-line': 2,
         'sel-line-start': 23,
         'selection_end': 73,
         'selection_start': 73},
        1334341766.289),
        (loc('osmxapi.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1334341811.914),
        (loc('osmplanet.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 2,
          'sel-line-start': 23,
          'selection_end': 73,
          'selection_start': 73},
         1334341829.148),
        (loc('__init__.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1344459806.21),
        [loc('unknown:untitled-1.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1344459820.4909999],
        (loc('osmplanet.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 2,
          'sel-line-start': 23,
          'selection_end': 73,
          'selection_start': 73},
         1344460271.233),
        (loc('README.txt'),
         {'attrib-starts': [],
          'first-line': 24,
          'folded-linenos': [],
          'sel-line': 35,
          'sel-line-start': 1033,
          'selection_end': 1091,
          'selection_start': 1091},
         1344460305.3570001),
        (loc('osmxapi.py'),
         {'attrib-starts': [],
          'first-line': 271,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1344460608.1949999),
        (loc('osmxapi.py'),
         {'attrib-starts': [],
          'first-line': 4,
          'folded-linenos': [],
          'sel-line': 9,
          'sel-line-start': 557,
          'selection_end': 632,
          'selection_start': 632},
         1344460616.8039999),
        (loc('osmxapi.py'),
         {'attrib-starts': [],
          'first-line': 74,
          'folded-linenos': [],
          'sel-line': 31,
          'sel-line-start': 2065,
          'selection_end': 2131,
          'selection_start': 2131},
         1344460632.9289999),
        (loc('osmplanet.py'),
         {'attrib-starts': [],
          'first-line': 21,
          'folded-linenos': [],
          'sel-line': 2,
          'sel-line-start': 23,
          'selection_end': 73,
          'selection_start': 73},
         1344460701.039),
        (loc('osmapi.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1344460707.711),
        (loc('osmapi.py'),
         {'attrib-starts': [('OsmApi',
                             70),
                            ('OsmApi.Xapi',
                             489)],
          'first-line': 481,
          'folded-linenos': [],
          'sel-line': 489,
          'sel-line-start': 22324,
          'selection_end': 22336,
          'selection_start': 22332},
         1344460710.2579999),
        (loc('osmxapi.py'),
         {'attrib-starts': [],
          'first-line': 74,
          'folded-linenos': [],
          'sel-line': 31,
          'sel-line-start': 2065,
          'selection_end': 2131,
          'selection_start': 2131},
         1344460716.227),
        (loc('osmapi.py'),
         {'attrib-starts': [('OsmApi',
                             70),
                            ('OsmApi.Xapi',
                             489)],
          'first-line': 481,
          'folded-linenos': [],
          'sel-line': 489,
          'sel-line-start': 22324,
          'selection_end': 22336,
          'selection_start': 22332},
         1344460717.586),
        [loc('osmxapi.py'),
         {'attrib-starts': [],
          'first-line': 74,
          'folded-linenos': [],
          'sel-line': 31,
          'sel-line-start': 2065,
          'selection_end': 2131,
          'selection_start': 2131},
         1344460718.4449999],
        (loc('osmapi.py'),
         {'attrib-starts': [('OsmApi',
                             70),
                            ('OsmApi.Xapi',
                             489)],
          'first-line': 481,
          'folded-linenos': [],
          'sel-line': 489,
          'sel-line-start': 22324,
          'selection_end': 22336,
          'selection_start': 22332},
         1344460722.0079999),
        (loc('README.txt'),
         {'attrib-starts': [],
          'first-line': 24,
          'folded-linenos': [],
          'sel-line': 35,
          'sel-line-start': 1028,
          'selection_end': 1034,
          'selection_start': 1034},
         1344460726.8989999),
        (loc('osmapi.py'),
         {'attrib-starts': [('OsmApi',
                             70),
                            ('OsmApi.Xapi',
                             489)],
          'first-line': 481,
          'folded-linenos': [],
          'sel-line': 489,
          'sel-line-start': 22324,
          'selection_end': 22336,
          'selection_start': 22332},
         1344460758.1029999),
        [loc('README.txt'),
         {'attrib-starts': [],
          'first-line': 24,
          'folded-linenos': [],
          'sel-line': 35,
          'sel-line-start': 1028,
          'selection_end': 1034,
          'selection_start': 1034},
         1344460766.2909999]],
        19),
        'current-loc': loc('README.txt'),
        'editor-states': {loc('README.txt'): {'attrib-starts': [],
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 407,
        'selection_end': 454,
        'selection_start': 454},
                          loc('__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                          loc('osmapi.py'): {'attrib-starts': [('OsmApi',
        70),
        ('OsmApi.Xapi',
         489)],
        'first-line': 481,
        'folded-linenos': [],
        'sel-line': 489,
        'sel-line-start': 22324,
        'selection_end': 22336,
        'selection_start': 22332},
                          loc('osmplanet.py'): {'attrib-starts': [],
        'first-line': 21,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 23,
        'selection_end': 73,
        'selection_start': 73}},
        'has-focus': False},
                               'open_files': [u'__init__.py',
        u'osmplanet.py',
        u'osmapi.py',
        u'README.txt']},
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (1810,
                         217,
                         1031,
                         586)}]}
guimgr.recent-documents = [loc('README.txt'),
                           loc('osmapi.py'),
                           loc('osmplanet.py'),
                           loc('__init__.py')]
guimgr.visual-state = {loc('osmxapi.py'): {'attrib-starts': [],
        'first-line': 74,
        'folded-linenos': [],
        'sel-line': 31,
        'sel-line-start': 2065,
        'selection_end': 2131,
        'selection_start': 2131}}
search.search-history = [u'xapi',
                         u'Xapi',
                         u'getmap']
